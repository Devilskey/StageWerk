// <auto-generated />
using System;
using AlertDefinitions.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlertDefinitions.Repositories.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230516100752_Migration-v0.1")]
    partial class Migrationv01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlertDefinitions.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AlertDefinitions.Models.UpdateLog", b =>
                {
                    b.Property<int>("UpdateLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpdateLogId"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateTable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UpdateLogId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("UpdateLog");
                });

            modelBuilder.Entity("AlertDefinitions.Models.Webhook", b =>
                {
                    b.Property<int>("WebhookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebhookId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebhookId");

                    b.ToTable("Webhooks");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.AlertDefinition", b =>
                {
                    b.Property<int>("AlertDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertDefinitionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExceptionTypeRegexRegexId")
                        .HasColumnType("int");

                    b.Property<int?>("LoglevelExpressionLogLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MessageRegexRegexId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceRegexRegexId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UrlRegexRegexId")
                        .HasColumnType("int");

                    b.HasKey("AlertDefinitionId");

                    b.HasIndex("ExceptionTypeRegexRegexId");

                    b.HasIndex("LoglevelExpressionLogLevelId");

                    b.HasIndex("MessageRegexRegexId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SourceRegexRegexId");

                    b.HasIndex("UrlRegexRegexId");

                    b.ToTable("AlertDefinition");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int>("AlertDefinitionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExceptionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LogLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.HasIndex("AlertDefinitionId");

                    b.HasIndex("LogLevelId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.LogLevel", b =>
                {
                    b.Property<int>("LogLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogLevelId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("LogLevelId");

                    b.ToTable("LogLevel");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.LogLevelExpression", b =>
                {
                    b.Property<int>("LogLevelExpressionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogLevelExpressionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operator")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LogLevelExpressionId");

                    b.HasIndex("LogLevelId");

                    b.ToTable("LogLevelExpressions");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Recipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WebhookId")
                        .HasColumnType("int");

                    b.HasKey("RecipientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TeamId");

                    b.HasIndex("WebhookId");

                    b.ToTable("Recipient");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Regex", b =>
                {
                    b.Property<int>("RegexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegexId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RegexId");

                    b.ToTable("Regex");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("AlertDefinitions.Models.UpdateLog", b =>
                {
                    b.HasOne("AlertDefinitions.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.AlertDefinition", b =>
                {
                    b.HasOne("AlertDefinitions.Repositories.Models.Regex", "ExceptionTypeRegex")
                        .WithMany()
                        .HasForeignKey("ExceptionTypeRegexRegexId");

                    b.HasOne("AlertDefinitions.Repositories.Models.LogLevel", "LoglevelExpression")
                        .WithMany()
                        .HasForeignKey("LoglevelExpressionLogLevelId");

                    b.HasOne("AlertDefinitions.Repositories.Models.Regex", "MessageRegex")
                        .WithMany()
                        .HasForeignKey("MessageRegexRegexId");

                    b.HasOne("AlertDefinitions.Repositories.Models.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId");

                    b.HasOne("AlertDefinitions.Repositories.Models.Regex", "SourceRegex")
                        .WithMany()
                        .HasForeignKey("SourceRegexRegexId");

                    b.HasOne("AlertDefinitions.Repositories.Models.Regex", "UrlRegex")
                        .WithMany()
                        .HasForeignKey("UrlRegexRegexId");

                    b.Navigation("ExceptionTypeRegex");

                    b.Navigation("LoglevelExpression");

                    b.Navigation("MessageRegex");

                    b.Navigation("Recipient");

                    b.Navigation("SourceRegex");

                    b.Navigation("UrlRegex");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Event", b =>
                {
                    b.HasOne("AlertDefinitions.Repositories.Models.AlertDefinition", "AlertDefinition")
                        .WithMany()
                        .HasForeignKey("AlertDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlertDefinitions.Repositories.Models.LogLevel", "LogLevel")
                        .WithMany()
                        .HasForeignKey("LogLevelId");

                    b.Navigation("AlertDefinition");

                    b.Navigation("LogLevel");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.LogLevelExpression", b =>
                {
                    b.HasOne("AlertDefinitions.Repositories.Models.LogLevel", "Loglevel")
                        .WithMany()
                        .HasForeignKey("LogLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loglevel");
                });

            modelBuilder.Entity("AlertDefinitions.Repositories.Models.Recipient", b =>
                {
                    b.HasOne("AlertDefinitions.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlertDefinitions.Repositories.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlertDefinitions.Models.Webhook", "Webhook")
                        .WithMany()
                        .HasForeignKey("WebhookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Team");

                    b.Navigation("Webhook");
                });
#pragma warning restore 612, 618
        }
    }
}
